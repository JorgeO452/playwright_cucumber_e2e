name: Continuous testing security

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment of Github Actions"
        required: false
        default: ""
        type: string
      repository:
        description: "Name of repo in Github"
        required: true
        type: string
      target-url-zap:
        description: "URL to scan in OWASP ZAP (for web security tests)"
        required: false
        default: ''
        type: string
      path-app:
        description: "Path of APK/IPA to scan in MobSF (for mobile security tests)"
        required: false
        default: ''
        type: string
    secrets:
      DIG_READER_GITHUB_ACCESS_TOKEN:
        required: true

permissions:
  id-token: write
  contents: read   

jobs:
  security-analysis:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Validate type security test
        env:
          PATH_APP: ${{ inputs.path-app }}
          TARGET_ZAP: ${{ inputs.target-url-zap }}
        run: |
          if [ -z "$PATH_APP" ] && [ -z "$TARGET_ZAP" ]; then
            echo "Debe usar la variable path-app (para apps m√≥viles) o target-url-zap (para web)."
            exit 1
          fi

      # üîπ Evaluate Mobile Apps Security (MobSF)
      - name: Checkout automation project
        if: ${{ inputs.path-app != '' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          token: ${{ secrets.DIG_READER_GITHUB_ACCESS_TOKEN }}
          persist-credentials: false
          path: ./${{ inputs.repository }}
          fetch-depth: 0
          lfs: true  

      - name: Verify APK File
        if: ${{ inputs.path-app != '' }}
        run: |
          echo "Verificando existencia del APK en: ${{ inputs.path-app }}"
          if [ ! -f "${{ inputs.path-app }}" ]; then
            echo "‚ùå ERROR: APK file not found at ${{ inputs.path-app }}"
            echo "üìÇ Contenido de src/test/mobile/apk:"
            ls -R src/test/mobile/apk || echo "‚ùå No existe el directorio src/test/mobile/apk"
            exit 1
          else
            echo "‚úÖ APK file found: ${{ inputs.path-app }}"
          fi

      - name: Run MobSF Scan
        if: ${{ inputs.path-app != '' }}
        env:
          INPUT_APP_NAME: "src/test/mobile/apk/app-release.apk"
          OUTPUT_FILE_NAME: "mobsf_report.json"
        run: |
          echo "üöÄ Iniciando MobSF Security Scan para: $INPUT_APP_NAME"

          docker run --rm -d -p 8000:8000 --name mobsf \
            -v $(pwd)/src/test/mobile/apk/app-release.apk:/root/.MobSF/uploads/app.apk \
            opensecurity/mobile-security-framework-mobsf:latest
          
          echo "‚è≥ Esperando 20 segundos para que MobSF inicie..."
          sleep 20
          
          echo "‚¨ÜÔ∏è Subiendo APK a MobSF..."
          UPLOAD_RESPONSE=$(curl -X POST "http://localhost:8000/api/v1/upload" \
            -H "Authorization: mobsf_api_key" \
            -F "file=@/root/.MobSF/uploads/app.apk")

          HASH=$(echo $UPLOAD_RESPONSE | jq -r '.hash')

          echo "üõ†Ô∏è Ejecutando an√°lisis en MobSF..."
          curl -X POST "http://localhost:8000/api/v1/analyze" \
            -H "Authorization: mobsf_api_key" \
            -H "Content-Type: application/json" \
            -d "{\"hash\":\"$HASH\"}"

          echo "üìÑ Descargando reporte..."
          curl -X POST "http://localhost:8000/api/v1/download_pdf" \
            -H "Authorization: mobsf_api_key" \
            -H "Content-Type: application/json" \
            -d "{\"hash\":\"$HASH\"}" -o "${OUTPUT_FILE_NAME}"

      - name: Upload MobSF Report
        if: ${{ inputs.path-app != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: security_reports
          retention-days: 1
          path: report_json.json

      # üîπ Evaluate Web Apps Security (OWASP ZAP)
      - name: ZAP baseline scan
        if: ${{ inputs.target-url-zap != '' }}
        uses: zaproxy/action-baseline@v0.14.0
        with:
          docker_name: 'ghcr.io/zaproxy/zaproxy:20240103-stable'
          target: ${{ inputs.target-url-zap }}
          token: ${{ secrets.DIG_READER_GITHUB_ACCESS_TOKEN }}
          allow_issue_writing: false
          artifact_name: security_reports

      - name: Restore security report
        if: ${{ always() }}
        uses: actions/download-artifact@v4
        with:
          name: security_reports
          path: ${{ inputs.repository }}/security-reports