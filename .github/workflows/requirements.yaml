name: Continuous testing requirements

on:
  pull_request:
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  check-skip:
    runs-on: ubuntu-latest
    outputs:
      should-skip: ${{ steps.skip-check.outputs.should-skip }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - id: skip-check
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if echo "$COMMIT_MSG" | grep -qiE "skip-ci|skip-lint"; then
            echo "should-skip=true" >> $GITHUB_OUTPUT
          else
            echo "should-skip=false" >> $GITHUB_OUTPUT
          fi

  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    outputs:
      pnpm-cache-key: ${{ steps.cache-pnpm.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install PNPM
        uses: pnpm/action-setup@v4

      - name: Cache Dependencies
        id: cache-pnpm
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache-pnpm.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --prefer-offline --ignore-scripts

  security-checks:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Scan for Secrets (TruffleHog)
        uses: trufflesecurity/trufflehog@v3.67.5
        with:
          extra_args: --only-verified

      - name: Security Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "Security Analysis"
          scanpath: "."
          format: "HTML"
          outdir: "./reports"

      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: ./reports

  lint:
    needs: [setup, check-skip]
    if: needs.check-skip.outputs.should-skip != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Run ESLint
        run: pnpm exec eslint --config eslint.config.cjs

  sonarqube:
    needs: setup
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}

  typecheck:
    needs: setup
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Run TypeScript Type Check
        run: pnpm exec tsc --noEmit